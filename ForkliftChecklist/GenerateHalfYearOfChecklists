Sub GenerateHalfYearOfChecklists()
    Dim baseDate As Date
    Dim weekMonday As Date
    Dim fileName As String
    Dim i As Integer
    Dim folderPath As String
    Dim rng As Range
    Dim initials As String
    Dim supervisorInitials As String
    Dim doc As Document
    Dim tbl As Table
    Dim opRowIndex As Integer
    Dim hrRowIndex As Integer
    Dim supRowIndex As Integer
    Dim rowIndex As Integer
    Dim hourReadingStr As String
    Dim hourReading As Double
    Dim originalDoc As Document
    Dim naInput As String, secondInput As String
    Dim naDict As Object, secondDict As Object
    Dim naDates(), secondDates()
    Dim dateKey As String, currentDate As Date
    Dim d As Integer

    ' Input prompts
    naInput = InputBox("Enter comma-separated dates to mark as 'N/A' (e.g., 050625, 061025):", "N/A Dates")
    Set naDict = CreateObject("Scripting.Dictionary")
    If Trim(naInput) <> "" Then
        naInput = Replace(naInput, " ", "")
        If InStr(naInput, ",") > 0 Then
            naDates = Split(naInput, ",")
        Else
            ReDim naDates(0)
            naDates(0) = naInput
        End If
        For i = 0 To UBound(naDates)
            If Len(naDates(i)) = 6 Then
                naDict(naDates(i)) = True
            End If
        Next i
    End If

    secondInput = InputBox("Enter comma-separated dates where supervisor initials replace operator initials (e.g., 060725):", "Supervisor Override Dates")
    Set secondDict = CreateObject("Scripting.Dictionary")
    If Trim(secondInput) <> "" Then
        secondInput = Replace(secondInput, " ", "")
        If InStr(secondInput, ",") > 0 Then
            secondDates = Split(secondInput, ",")
        Else
            ReDim secondDates(0)
            secondDates(0) = secondInput
        End If
        For i = 0 To UBound(secondDates)
            If Len(secondDates(i)) = 6 Then
                secondDict(secondDates(i)) = True
            End If
        Next i
    End If

    initials = InputBox("What are Operator's Initials?", "Operator Initials")
    If Trim(initials) = "" Then
        MsgBox "No initials entered. Macro will exit.", vbExclamation
        Exit Sub
    End If

    supervisorInitials = InputBox("What are Supervisor's Initials?", "Supervisor Initials")
    If Trim(supervisorInitials) = "" Then
        MsgBox "No supervisor initials entered. Macro will exit.", vbExclamation
        Exit Sub
    End If

    hourReadingStr = InputBox("What is the Hour Meter Reading?", "Hour Meter Reading")
    If Not IsNumeric(hourReadingStr) Then
        MsgBox "Invalid number entered for Hour Meter Reading. Macro will exit.", vbExclamation
        Exit Sub
    Else
        hourReading = CDbl(hourReadingStr)
    End If

    folderPath = "C:\Users\Andrew.Pocoroba\OneDrive - Sartorius Corporate Administration GmbH\Desktop\Forklift Checklist\"
    Set originalDoc = ActiveDocument
    baseDate = Date - Weekday(Date, vbMonday) + 1 ' Start from this week's Monday
    Randomize

    For i = 0 To 25 ' Loop through 26 weeks
        weekMonday = baseDate - (i * 7)

        originalDoc.Activate
        originalDoc.Content.Copy
        Documents.Add.Content.Paste
        Set doc = ActiveDocument

        ' Replace Week Beginning line
        Set rng = doc.Content
        With rng.Find
            .text = "Week Beginning:*^13"
            .MatchWildcards = True
            If .Execute Then
                rng.text = "Week Beginning: " & Format(weekMonday, "mm/dd/yy") & vbCr
            Else
                MsgBox """Week Beginning:"" not found in document.", vbExclamation
                Exit Sub
            End If
        End With

        ' Find table
        If doc.Tables.Count = 0 Then
            MsgBox "No tables found in the document.", vbCritical
            Exit Sub
        End If
        Set tbl = doc.Tables(1)

        ' Find rows
        opRowIndex = FindRowIndex(tbl, "Operators Initials:")
        supRowIndex = FindRowIndex(tbl, "Supervisor’s OK:")
        hrRowIndex = FindRowIndex(tbl, "Hour Meter Reading:")

        If opRowIndex = 0 Or supRowIndex = 0 Or hrRowIndex = 0 Then
            MsgBox "One or more required rows were not found.", vbCritical
            Exit Sub
        End If

        ' Fill in the week (Monday–Friday)
        For d = 4 To 0 Step -1
            currentDate = weekMonday + d
            dateKey = Format(currentDate, "mmddyy")

            If naDict.Exists(dateKey) Then
                ' Put "N/A" in all relevant cells, clear formatting to normal
                dayName = Format(currentDate, "dddd")  ' Gets full weekday name e.g. Monday
                InsertNA (dayName)
                SetCellText tbl, opRowIndex, d + 2, "N/A"
                SetCellText tbl, supRowIndex, d + 2, "N/A"
                SetCellText tbl, hrRowIndex, d + 2, "N/A"
            Else
                If secondDict.Exists(dateKey) Then
                    SetCellText tbl, opRowIndex, d + 2, MaybeFlipCasing(supervisorInitials)
                Else
                    SetCellText tbl, opRowIndex, d + 2, MaybeFlipCasing(initials)
                End If
                SetCellText tbl, supRowIndex, d + 2, MaybeFlipCasing(supervisorInitials)
                SetCellText tbl, hrRowIndex, d + 2, Format(hourReading, "0.0")

                ' 1 in 4 chance of decrement
                If Rnd < 0.25 Then
                    hourReading = hourReading - (Rnd * 0.3 + 0.1)
                    If hourReading < 0 Then hourReading = 0
                End If
            End If
        Next d

        ' Save file
        fileName = "Forklift-Check-" & Format(weekMonday, "mmddyy") & ".docx"
        If Dir(folderPath & fileName) <> "" Then Kill folderPath & fileName
        doc.SaveAs2 fileName:=folderPath & fileName, FileFormat:=wdFormatXMLDocument
        doc.Close SaveChanges:=False
    Next i

    MsgBox "26 checklists saved with hour readings and custom date settings applied.", vbInformation
End Sub

' Helper to set cell text and reset font to default
Sub SetCellText(tbl As Table, rowIndex As Integer, colIndex As Integer, txt As String)
    With tbl.Cell(rowIndex, colIndex).Range
        .text = txt
        .Font.Name = "Calibri"  ' Adjust to your document's default font if different
        .Font.Size = 11        ' Adjust font size as needed
    End With
End Sub

Function FindRowIndex(tbl As Table, label As String) As Integer
    Dim i As Integer
    For i = 1 To tbl.Rows.Count
        If InStr(1, Trim(Replace(tbl.Cell(i, 1).Range.text, Chr(13) & Chr(7), "")), label, vbTextCompare) > 0 Then
            FindRowIndex = i
            Exit Function
        End If
    Next i
    FindRowIndex = 0
End Function

Function MaybeFlipCasing(text As String) As String
    Dim i As Integer, result As String, ch As String
    result = ""
    For i = 1 To Len(text)
        ch = Mid(text, i, 1)
        If Rnd < 1 / 55 Then
            If ch = UCase(ch) Then
                result = result & LCase(ch)
            Else
                result = result & UCase(ch)
            End If
        Else
            result = result & ch
        End If
    Next i
    MaybeFlipCasing = result
End Function

